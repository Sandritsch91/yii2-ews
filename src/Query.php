<?php
/**
 * @package yii2-ews
 * @author Simon Karlen <simi.albi@gmail.com>
 */

namespace simialbi\yii2\ews;

use Yii;
use yii\db\QueryInterface;

/**
 * Class Query
 *
 */
class Query extends \yii\db\Query implements QueryInterface
{
    /**
     * {@inheritDoc}
     * @param Connection|null $db the ews connection used to generate the SQL statement.
     * If this parameter is not given, the `ews` application component will be used.
     * @return Command the created ews command instance.
     * @throws \yii\base\InvalidConfigException
     */
    public function createCommand($db = null)
    {
        if ($db === null) {
            $db = Yii::$app->get('ews');
        }
        list($request, $params) = $db->getQueryBuilder()->build($this);

        $command = $db->createCommand($request, $params);
        $this->setCommandCache($command);

        return $command;
    }

    public function count($q = '*', $db = null)
    {
        // TODO: Change the autogenerated stub
    }

    public function exists($db = null)
    {
        // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritDoc}
     * @param static $from the source query object
     * @return static the new Query object
     */
    public static function create($from)
    {
        return new Query([
            'where' => $from->where,
            'limit' => $from->limit,
            'offset' => $from->offset,
            'orderBy' => $from->orderBy,
            'indexBy' => $from->indexBy,
            'select' => $from->select,
            'selectOption' => $from->selectOption,
            'distinct' => $from->distinct,
            'from' => $from->from,
            'groupBy' => $from->groupBy,
            'join' => $from->join,
            'having' => $from->having,
            'union' => $from->union,
            'params' => $from->params,
            'withQueries' => $from->withQueries
        ]);
    }
}
